Install Node.js

cmd - npm install --global gulp-cli

cmd project - npm install --save-dev gulp

npm init

node_modules - gulpfile.js

var gulp = require('gulp'),
	concatCSS = require('gulp-concat-css'), - обединяет файлы
	rename = require('gulp-rename'); - переименовывет файл
	notify = require('gulp-notify'); - выводит сообщение
	minifyCSS = require('gulp-minify-css'); - минимизирует файлы
 
gulp.task('default', function () {
  return gulp.src('css/*.css') - путь где находиться css файлы
    .pipe(concatCSS("bundle.css")) 
    .pipe(minifyCSS())
    .pipe(rename("bundle.min.css"))
    .pipe(gulp.dest('app/css')) - где будут сохранены файлы
    .pipe(notify('Done!'));
});

gulp.task('watch',function(){ - автообновление файлов
	gulp.watch('css/*.css', ['default'])
});

gulp watch

gulp-autoprefixer - префиксы для браузеров

gulp-jade

var gulp = require('gulp'),
	jade = require('gulp-jade'),
	concatCSS = require('gulp-concat-css'),
	rename = require('gulp-rename'),
	notify = require('gulp-notify'),
	autoprefixer = require('gulp-autoprefixer'),
	minifyCSS = require('gulp-minify-css');
 
gulp.task('default', function () {
  return gulp.src('css/*.css')
    .pipe(concatCSS("bundle.css"))
	.pipe(autoprefixer({browsers: ['last 2 versions', '> 1%', 'ie 9'],cascade: false}))
    .pipe(minifyCSS())
    .pipe(rename("bundle.min.css"))
    .pipe(gulp.dest('app/css'))
    .pipe(notify('Done!'));
});

// Jade
gulp.task('jade', function(){
  gulp.src('jade/*.jade')
    .pipe(jade())
    .pipe(gulp.dest('app/'))
});

gulp.task('watch',function(){
	gulp.watch('css/*.css', ['default']);
	gulp.watch('jade/*.jade',['jade']);
})

-livereloader server

-gulp-sass

-gulp-uncss - для удаления не использующих стилей в файле css

-gulp-rew-append - для добавления префикса для файла css для кеширования файла.

var gulp = require('gulp'),
	jade = require('gulp-jade'),
	concatCSS = require('gulp-concat-css'),
	rename = require('gulp-rename'),
	notify = require('gulp-notify'),
	autoprefixer = require('gulp-autoprefixer'),
	sass = require('gulp-sass'),
	minifyCSS = require('gulp-minify-css');
 
gulp.task('sass', function () {
  gulp.src('css/style-one.sass')
    // .pipe(sass('css/*.sass').on('error', sass.logError))
    .pipe(sass())
	.pipe(autoprefixer({browsers: ['last 2 versions', '> 1%', 'ie 9'],cascade: false}))
    .pipe(minifyCSS())
    .pipe(rename("bundle.min.css"))
    .pipe(gulp.dest('app/css'))
    .pipe(notify('Done!'));
});

// Jade
gulp.task('jade', function(){
  gulp.src('jade/*.jade')
    .pipe(jade())
    .pipe(gulp.dest('app/'))
});

// gulp.task('sass', function () {
//   gulp.src('css/*.scss')
//     .pipe(sass().on('error', sass.logError))
//     .pipe(gulp.dest('app/css'));
// });

gulp.task('watch',function(){
	// gulp.watch('css/*.css', ['default']);
	gulp.watch('css/*.sass', ['sass']);
	gulp.watch('jade/*.jade',['jade']);
})